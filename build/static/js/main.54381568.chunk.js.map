{"version":3,"sources":["assets/images/logo.svg","components/TopBar.js","constants.js","components/Register.js","components/Login.js","components/Gallery.js","components/CreatePostForm.js","components/CreatePostButton.js","assets/images/blue-marker.svg","components/AroundMarker.js","components/AroundMap.js","components/Home.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["TopBar","className","src","logo","alt","this","props","isLoggedIn","onClick","handleLogout","type","React","Component","API_ROOT","TOKEN_KEY","GEO_OPTIONS","enableHighAccuracy","maximumAge","timeout","POS_KEY","AUTH_HEADER","POST_TYPE_IMAGE","POST_TYPE_VIDEO","POST_TYPE_UNKNOWN","LOC_SHAKE","TOPIC_AROUND","RegistrationForm","state","confirmDirty","autoCompleteResult","handleSubmit","e","preventDefault","form","validateFields","err","values","console","log","fetch","method","body","JSON","stringify","username","password","then","response","ok","text","Error","statusText","data","message","success","history","push","catch","error","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","getFieldDecorator","tailFormItemLayout","wrapperCol","xs","span","offset","sm","labelCol","onSubmit","Item","label","rules","required","hasFeedback","validator","Password","onBlur","htmlType","to","Register","Form","create","name","NormalLoginForm","stateText","handleLoginSucceed","prefix","style","color","placeholder","Login","Gallery","images","map","image","customOverlay","captionStyle","user","caption","wrapperStyle","backdropClosesModal","enableImageSelection","display","minHeight","width","border","overflow","backgroundColor","maxHeight","position","bottom","padding","fontSize","NormalCreatePostForm","normFile","Array","isArray","fileList","beforeUpload","formItemLayout","valuePropName","getValueFromEvent","Dragger","CreatePostForm","CreatePostButton","visible","confirmLoading","showModal","handleOk","token","localStorage","getItem","parse","lat","lon","formData","FormData","set","Math","random","originFileObj","headers","Authorization","loadPostsByTopic","resetFields","handleCancel","getFormRef","formInstance","title","onOk","okText","onCancel","ref","AroundMarker","isOpen","handleToggle","prevState","post","url","location","isImagePost","customIcon","undefined","blueMarkerUrl","scaledSize","window","google","maps","Size","lng","onMouseOver","onMouseOut","icon","controls","NormalAroundMap","reloadMarker","center","getCenter","radius","getRadius","getMapRef","mapInstance","bounds","getBounds","ne","getNorthEast","right","LatLng","geometry","spherical","computeDistanceBetween","defaultZoom","defaultCenter","onDragEnd","onZoomChanged","posts","key","AroundMap","withScriptjs","withGoogleMap","TabPane","Tabs","Home","isLoadingGeoLocation","isLoadingPosts","topic","onSuccessLoadGeoLocation","coords","latitude","longitude","setItem","loadNearbyPosts","onFailedLoadGeoLocation","range","json","handleTopicChange","loadFacesAroundTheWolrd","navigator","geolocation","getCurrentPosition","filter","thumbnail","thumbnailWidth","thumbnailHeight","gutter","includes","tip","length","renderImagePosts","renderVideoPosts","operations","Group","onChange","tabBarExtraContent","tab","renderPosts","googleMapURL","loadingElement","height","containerElement","mapElement","Main","getLogin","getHome","exact","path","render","component","App","Boolean","removeItem","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.54381568.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from 'react';\nimport logo from '../assets/images/logo.svg';\nimport { Icon } from 'antd';\n// import Icon from '@ant-design/icons';\nexport class TopBar extends React.Component {\n  render() {\n    return (\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <span className=\"App-title\">Around</span>\n        {this.props.isLoggedIn ?\n          <a className=\"logout\" onClick={this.props.handleLogout} >\n            <Icon type=\"logout\"/>{' '}Logout\n          </a> : null}\n      </header>\n    );\n  }\n}","export const API_ROOT = 'http://35.225.128.253:8080';\nexport const TOKEN_KEY = 'TOKEN_KEY';\nexport const GEO_OPTIONS = {\n  enableHighAccuracy: true,\n  maximumAge        : 300000,\n  timeout           : 27000,\n};\nexport const POS_KEY = 'POS_KEY';\nexport const AUTH_HEADER = 'Bearer';\nexport const POST_TYPE_IMAGE = 'image';\nexport const POST_TYPE_VIDEO = 'video';\nexport const POST_TYPE_UNKNOWN = 'unknown';\nexport const LOC_SHAKE = 0.02;\nexport const TOPIC_AROUND = 'around';\nexport const TOPIC_FACE = 'face';\n","import React from 'react';\nimport { Form, Input, Button, message } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { API_ROOT } from '../constants';\n\nclass RegistrationForm extends React.Component {\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: [],\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n        fetch(`${API_ROOT}/signup`, {\n          method: 'POST',\n          body: JSON.stringify({\n            username: values.username,\n            password: values.password,\n          }),\n        })\n          .then((response) => {\n            if (response.ok) {\n              return response.text();\n            }\n            throw new Error(response.statusText);\n          })\n          .then((data) => {\n            console.log(data);\n            message.success('Registration succeed!');\n            this.props.history.push('/login');\n          })\n          .catch((err) => {\n            console.error(err);\n            message.error('Registration failed.');\n          });\n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const { value } = e.target;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n\n    return (\n      <Form {...formItemLayout} onSubmit={this.handleSubmit} className=\"register\">\n        <Form.Item\n          label=\"Username\"\n        >\n          {getFieldDecorator('username', {\n            rules: [{ required: true, message: 'Please input your username!' }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"Password\" hasFeedback>\n          {getFieldDecorator('password', {\n            rules: [\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n              {\n                validator: this.validateToNextPassword,\n              },\n            ],\n          })(<Input.Password />)}\n        </Form.Item>\n        <Form.Item label=\"Confirm Password\" hasFeedback>\n          {getFieldDecorator('confirm', {\n            rules: [\n              {\n                required: true,\n                message: 'Please confirm your password!',\n              },\n              {\n                validator: this.compareToFirstPassword,\n              },\n            ],\n          })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Register\n          </Button>\n          <p>I already have an account, go back to <Link to=\"/login\">login</Link></p>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport const Register = Form.create({ name: 'register' })(RegistrationForm);\n","import React from 'react';\nimport { Form, Input, Icon, Button, message } from 'antd';\n// import Icon from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\nimport { API_ROOT } from '../constants';\n\nclass NormalLoginForm extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n        fetch(`${API_ROOT}/login`, {\n          method: 'POST',\n          body: JSON.stringify({\n            username: values.username,\n            password: values.password,\n          }),\n        })\n          .then((response) => {\n            if (response.ok) {\n              return response.text();\n            }\n            throw new Error(response.stateText);\n          })\n          .then((data) => {\n            console.log(data);\n            this.props.handleLoginSucceed(data);\n            message.success('Login succeed!');\n          })\n          .catch((err) => {\n            console.error(err);\n            message.error('Login failed.');\n          });\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <Form.Item>\n          {getFieldDecorator('username', {\n            rules: [{ required: true, message: 'Please input your username!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Username\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please input your Password!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            Log in\n          </Button>\n          Or <Link to=\"/register\">register now!</Link>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport const Login = Form.create({ name: 'normal_login' })(NormalLoginForm);","import React, { Component }from 'react';\nimport PropTypes from 'prop-types';\nimport GridGallery from 'react-grid-gallery';\n\nexport class Gallery extends Component {\n  static propTypes = {\n    images: PropTypes.arrayOf(\n      PropTypes.shape({\n        user: PropTypes.string.isRequired,\n        src: PropTypes.string.isRequired,\n        thumbnail: PropTypes.string.isRequired,\n        caption: PropTypes.string,\n        thumbnailWidth: PropTypes.number.isRequired,\n        thumbnailHeight: PropTypes.number.isRequired\n      })\n    ).isRequired\n  }\n\n  render() {\n    const images = this.props.images.map((image) => {\n      return {\n        ...image,\n        customOverlay: (\n          <div style={captionStyle}>\n            <div>{`${image.user}: ${image.caption}`}</div>\n          </div>\n        ),\n      };\n    });\n\n    return (\n      <div style={wrapperStyle}>\n        <GridGallery\n          backdropClosesModal\n          images={images}\n          enableImageSelection={false}/>\n      </div>\n    );\n  }\n}\n\n\nconst wrapperStyle = {\n  display: \"block\",\n  minHeight: \"1px\",\n  width: \"100%\",\n  border: \"1px solid #ddd\",\n  overflow: \"auto\"\n};\n\nconst captionStyle = {\n  backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n  maxHeight: \"240px\",\n  overflow: \"hidden\",\n  position: \"absolute\",\n  bottom: \"0\",\n  width: \"100%\",\n  color: \"white\",\n  padding: \"2px\",\n  fontSize: \"90%\"\n};\n","import React from 'react';\nimport { Form, Icon, Input, Upload} from 'antd';\n// import Icon from '@ant-design/icons';\nclass NormalCreatePostForm extends React.Component {\n  normFile = e => {\n    console.log('Upload event:', e);\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  };\n\n  beforeUpload = () => false;\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 14 },\n    };\n    return (\n      <Form {...formItemLayout}>\n        <Form.Item label=\"Message\">\n          {getFieldDecorator('message', {\n            rules: [{ required: true, message: 'Please input message.' }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"Image/Video\">\n          <div className=\"dropbox\">\n            {getFieldDecorator('image', {\n              valuePropName: 'fileList',\n              getValueFromEvent: this.normFile,\n              rules: [{ required: true, message: 'Please select an image.' }]\n            })(\n              <Upload.Dragger name=\"files\" beforeUpload={this.beforeUpload}>\n                <p className=\"ant-upload-drag-icon\">\n                  <Icon type=\"inbox\" />\n                </p>\n                <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                <p className=\"ant-upload-hint\">Support for a single or bulk upload.</p>\n              </Upload.Dragger>,\n            )}\n          </div>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport const CreatePostForm = Form.create()(NormalCreatePostForm);\n","import React from 'react';\nimport { Modal, Button, message } from 'antd';\nimport { CreatePostForm } from './CreatePostForm';\nimport { API_ROOT, AUTH_HEADER, TOKEN_KEY, POS_KEY, LOC_SHAKE, TOPIC_AROUND } from '../constants';\n\nexport class CreatePostButton extends React.Component {\n  state = {\n    visible: false,\n    confirmLoading: false,\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleOk = () => {\n    this.form.validateFields((err, values) => {\n      console.log(values);\n      if (!err) {\n        const token = localStorage.getItem(TOKEN_KEY);\n        const { lat, lon } = JSON.parse(localStorage.getItem(POS_KEY));\n\n        const formData = new FormData();\n        formData.set('lat', lat + Math.random() * LOC_SHAKE * 2 - LOC_SHAKE);\n        formData.set('lon', lon + Math.random() * LOC_SHAKE * 2 - LOC_SHAKE);\n        formData.set('message', values.message);\n        formData.set('image', values.image[0].originFileObj);\n\n        this.setState({ confirmLoading: true });\n        fetch(`${API_ROOT}/post`, {\n          method: 'POST',\n          headers: {\n            Authorization: `${AUTH_HEADER} ${token}`\n          },\n          body: formData,\n        })\n          .then((response) => {\n            if (response.ok) {\n              return this.props.loadPostsByTopic();\n            }\n            throw new Error('Failed to create post.');\n          })\n          .then(() => {\n            this.setState({ visible: false, confirmLoading: false });\n            this.form.resetFields();\n            message.success('Post created successfully!');\n          })\n          .catch((e) => {\n            console.error(e);\n            message.error('Failed to create post.');\n            this.setState({ confirmLoading: false });\n          });\n      }\n    });\n  };\n\n  handleCancel = () => {\n    console.log('Clicked cancel button');\n    this.setState({\n      visible: false,\n    });\n  };\n\n  getFormRef = (formInstance) => {\n    this.form = formInstance;\n  }\n\n  render() {\n    const { visible, confirmLoading } = this.state;\n    return (\n      <div>\n        <Button type=\"primary\" onClick={this.showModal}>\n          Create New Post\n        </Button>\n        <Modal\n          title=\"Create New Post\"\n          visible={visible}\n          onOk={this.handleOk}\n          okText='Create'\n          confirmLoading={confirmLoading}\n          onCancel={this.handleCancel}\n        >\n          <CreatePostForm ref={this.getFormRef}/>\n        </Modal>\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/blue-marker.5238d997.svg\";","import React from 'react';\nimport { Marker, InfoWindow } from 'react-google-maps';\nimport PropTypes from 'prop-types';\nimport blueMarkerUrl from '../assets/images/blue-marker.svg';\n\nexport class AroundMarker extends React.Component {\n  static propTypes = {\n    post: PropTypes.object.isRequired,\n  }\n\n  state = {\n    isOpen: false,\n  }\n\n  handleToggle = () => {\n    this.setState((prevState) => ({ isOpen: !prevState.isOpen }));\n  }\n\n  render() {\n    const { user, message, url, location, type } = this.props.post;\n    const { lat, lon } = location;\n    const isImagePost = type === 'image';\n    const customIcon = isImagePost ? undefined : {\n      url: blueMarkerUrl,\n      scaledSize: new window.google.maps.Size(26, 41),\n    };\n    return (\n      <Marker\n        position={{ lat, lng: lon }}\n        onMouseOver={isImagePost ? this.handleToggle : undefined}\n        onMouseOut={isImagePost ? this.handleToggle : undefined}\n        onClick={isImagePost ? undefined: this.handleToggle}\n        icon={customIcon}\n      >\n        {this.state.isOpen ? (\n          <InfoWindow>\n            <div>\n              {isImagePost\n                ? <img src={url} alt={message} className=\"around-marker-image\"/>\n                : <video src={url} controls className=\"around-marker-video\"/>}\n              <p>{`${user}: ${message}`}</p>\n            </div>\n          </InfoWindow>\n        ) : null}\n      </Marker>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n} from \"react-google-maps\";\nimport { AroundMarker } from './AroundMarker';\nimport { POS_KEY } from '../constants';\n\nclass NormalAroundMap extends React.Component {\n  reloadMarker = () => {\n    const center = this.getCenter();\n    const radius = this.getRadius();\n    this.props.loadPostsByTopic(center, radius);\n  }\n\n  getCenter() {\n    const center = this.map.getCenter();\n    return { lat: center.lat(), lon: center.lng() };\n  }\n\n  getRadius() {\n    const center = this.map.getCenter();\n    const bounds = this.map.getBounds();\n    if (center && bounds) {\n      const ne = bounds.getNorthEast();\n      const right = new window.google.maps.LatLng(center.lat(), ne.lng());\n      return 0.001 * window.google.maps.geometry.spherical.computeDistanceBetween(center, right);\n    }\n  }\n\n\n  getMapRef = (mapInstance) => {\n    this.map = mapInstance;\n    window.map = mapInstance;\n  }\n\n  render() {\n\n\n    if (localStorage.getItem(POS_KEY) == null) {\n      var lat = 37.84469154098336;\n      var lon = -122.292979660887;\n    }\n    else {\n      var { lat, lon } = JSON.parse(localStorage.getItem(POS_KEY));\n    }\n\n\n    return (\n      <GoogleMap\n        ref={this.getMapRef}\n        defaultZoom={11}\n        defaultCenter={{ lat, lng: lon }}\n        onDragEnd={this.reloadMarker}\n        onZoomChanged={this.reloadMarker}\n      >\n        {this.props.posts.map((post) => <AroundMarker post={post} key={post.url} />)}\n      </GoogleMap>\n    );\n  }\n}\n\nexport const AroundMap = withScriptjs(withGoogleMap(NormalAroundMap));\n","import React from 'react';\nimport { Tabs, Spin, Row, Col, Radio } from 'antd';\nimport {\n  GEO_OPTIONS,\n  POS_KEY,\n  API_ROOT,\n  AUTH_HEADER,\n  TOKEN_KEY,\n  POST_TYPE_IMAGE,\n  POST_TYPE_VIDEO,\n  POST_TYPE_UNKNOWN,\n  TOPIC_AROUND,\n  TOPIC_FACE,\n} from '../constants';\nimport { Gallery } from './Gallery';\nimport { CreatePostButton } from './CreatePostButton';\nimport { AroundMap } from './AroundMap';\n\nconst { TabPane } = Tabs;\n\nexport class Home extends React.Component {\n  state = {\n    isLoadingGeoLocation: false,\n    isLoadingPosts: false,\n    error: '',\n    posts: [],\n    topic: TOPIC_AROUND,\n  }\n\n  componentDidMount() {\n    if (\"geolocation\" in navigator) {\n      this.setState({ isLoadingGeoLocation: true, error: '' });\n      navigator.geolocation.getCurrentPosition(\n        this.onSuccessLoadGeoLocation,\n        this.onFailedLoadGeoLocation,\n        GEO_OPTIONS,\n      );\n    } else {\n      this.setState({ error: 'Geolocation is not supported.'});\n    }\n  }\n\n  onSuccessLoadGeoLocation = (position) => {\n    console.log(position);\n    const { latitude, longitude } = position.coords;\n    localStorage.setItem(POS_KEY, JSON.stringify({ lat: latitude, lon: longitude }));\n    this.setState({ isLoadingGeoLocation: false, error: '' });\n    this.loadNearbyPosts();\n  }\n\n  onFailedLoadGeoLocation = () => {\n    this.setState({ isLoadingGeoLocation: false, error: 'Failed to load geo location.' });\n  }\n\n  loadNearbyPosts = (center, radius) => {\n    const { lat, lon } = center ? center : JSON.parse(localStorage.getItem(POS_KEY));\n    const range = radius ? radius : 20;\n    const token = localStorage.getItem(TOKEN_KEY);\n    this.setState({ isLoadingPosts: true, error: '' });\n    return fetch(`${API_ROOT}/search?lat=${lat}&lon=${lon}&range=${range}`, {\n      method: 'GET',\n      headers: {\n        Authorization: `${AUTH_HEADER} ${token}`,\n      }\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Failed to load posts.');\n      })\n      .then((data) => {\n        console.log(data);\n        this.setState({ posts: data ? data : [], isLoadingPosts: false });\n      })\n      .catch((e) => {\n        console.error(e);\n        this.setState({ isLoadingPosts: false, error: e.message });\n      });\n  }\n\n  renderImagePosts() {\n    const { posts } = this.state;\n    const images = posts\n      .filter((post) => post.type === POST_TYPE_IMAGE)\n      .map((post) => {\n        return {\n          user: post.user,\n          src: post.url,\n          thumbnail: post.url,\n          caption: post.message,\n          thumbnailWidth: 400,\n          thumbnailHeight: 300,\n        };\n      });\n    return <Gallery images={images}/>\n  }\n\n  renderVideoPosts() {\n    const { posts } = this.state;\n    return (\n      <Row gutter={30}>\n        {\n          posts\n            .filter((post) => [POST_TYPE_VIDEO, POST_TYPE_UNKNOWN].includes(post.type))\n            .map((post) => (\n              <Col span={6} key={post.url}>\n                <video src={post.url} controls={true} className=\"video-block\"/>\n                <p>{post.user}: {post.message}</p>\n              </Col>\n            ))\n        }\n      </Row>\n    );\n  }\n\n  renderPosts(type) {\n    const { error, isLoadingGeoLocation, isLoadingPosts, posts } = this.state;\n    if (error) {\n      return error;\n    } else if (isLoadingGeoLocation) {\n      return <Spin tip=\"Loading geo location...\"/>;\n    } else if (isLoadingPosts) {\n      return <Spin tip=\"Loading posts...\"/>\n    } else if (posts.length > 0) {\n      return type === POST_TYPE_IMAGE ? this.renderImagePosts() : this.renderVideoPosts();\n    } else {\n      return 'No nearby posts';\n    }\n  }\n\n  handleTopicChange = (e) => {\n    const topic = e.target.value;\n    this.setState({ topic });\n    if (topic === TOPIC_AROUND) {\n      this.loadNearbyPosts();\n    } else {\n      this.loadFacesAroundTheWolrd();\n    }\n  }\n\n  loadFacesAroundTheWolrd = () => {\n    const token = localStorage.getItem(TOKEN_KEY);\n    this.setState({ isLoadingPosts: true, error: '' });\n    return fetch(`${API_ROOT}/cluster?term=face`, {\n      method: 'GET',\n      headers: {\n        Authorization: `${AUTH_HEADER} ${token}`,\n      }\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Failed to load posts');\n      })\n      .then((data) => {\n        console.log(data);\n        this.setState({ posts: data ? data : [], isLoadingPosts: false });\n      })\n      .catch((e) => {\n        console.error(e);\n        this.setState({ isLoadingPosts: false , error: e.message });\n      });\n  }\n\n  loadPostsByTopic = (center, radius) => {\n    if (this.state.topic === TOPIC_AROUND) {\n      return this.loadNearbyPosts(center, radius);\n    } else {\n      return this.loadFacesAroundTheWolrd();\n    }\n  }\n\n  render() {\n    const operations = (\n      <CreatePostButton loadPostsByTopic={this.loadPostsByTopic}/>\n    );\n    return (\n      <div>\n        <Radio.Group onChange={this.handleTopicChange} value={this.state.topic}>\n          <Radio value={TOPIC_AROUND}>Posts Around Me</Radio>\n          <Radio value={TOPIC_FACE}>Faces Around The World</Radio>\n        </Radio.Group>\n        <Tabs tabBarExtraContent={operations} className=\"main-tabs\">\n          <TabPane tab=\"Image Posts\" key=\"1\">\n            {this.renderPosts(POST_TYPE_IMAGE)}\n          </TabPane>\n          <TabPane tab=\"Video Posts\" key=\"2\">\n            {this.renderPosts(POST_TYPE_VIDEO)}\n          </TabPane>\n          <TabPane tab=\"Map\" key=\"3\">\n            <AroundMap\n              googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyD3CEh9DXuyjozqptVB5LA-dN7MxWWkr9s&v=3.exp&libraries=geometry,drawing,places\"\n              loadingElement={<div style={{ height: `100%` }} />}\n              containerElement={<div style={{ height: `600px` }} />}\n              mapElement={<div style={{ height: `100%` }} />}\n              posts={this.state.posts}\n              loadPostsByTopic={this.loadPostsByTopic}\n            />\n          </TabPane>\n        </Tabs>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Register } from './Register';\nimport { Login } from './Login';\nimport { Home } from './Home';\nimport { Switch, Route, Redirect } from 'react-router'\n\nexport class Main extends React.Component {\n  getLogin = () => {\n    return this.props.isLoggedIn ? <Redirect to=\"/home\"/> : <Login handleLoginSucceed={this.props.handleLoginSucceed}/>;\n  }\n\n  getHome = () => {\n    return this.props.isLoggedIn ? <Home/> : <Redirect to=\"/login\"/>;\n  }\n  render() {\n    return (\n      <div className=\"main\">\n        <Switch>\n          <Route exact path=\"/\" render={this.getLogin}/>\n          <Route path=\"/login\" render={this.getLogin}/>\n          <Route path=\"/register\" component={Register}/>\n          <Route path=\"/home\" render={this.getHome}/>\n          <Route render={this.getLogin}/>\n        </Switch>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { TopBar } from './TopBar';\nimport { Main } from './Main';\nimport { TOKEN_KEY } from '../constants';\n\nimport '../styles/App.css';\n\nclass App extends React.Component {\n  state = {\n    isLoggedIn: Boolean(localStorage.getItem(TOKEN_KEY)),\n  }\n\n  handleLoginSucceed = (token) => {\n    localStorage.setItem(TOKEN_KEY, token)\n    this.setState({ isLoggedIn: true });\n  }\n\n  handleLogout = () => {\n    localStorage.removeItem(TOKEN_KEY);\n    this.setState({ isLoggedIn: false });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <TopBar handleLogout={this.handleLogout} isLoggedIn={this.state.isLoggedIn}/>\n        <Main handleLoginSucceed={this.handleLoginSucceed} isLoggedIn={this.state.isLoggedIn}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render((\n  <BrowserRouter>\n    <App/>\n  </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}