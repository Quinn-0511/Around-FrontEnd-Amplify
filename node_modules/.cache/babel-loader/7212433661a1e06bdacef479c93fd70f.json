{"ast":null,"code":"import _classCallCheck from\"/home/quinn/Projects/Around-FrontEnd-Amplify/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/quinn/Projects/Around-FrontEnd-Amplify/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/quinn/Projects/Around-FrontEnd-Amplify/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/quinn/Projects/Around-FrontEnd-Amplify/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{Tabs,Spin,Row,Col,Radio}from'antd';import{GEO_OPTIONS,POS_KEY,API_ROOT,AUTH_HEADER,TOKEN_KEY,POST_TYPE_IMAGE,POST_TYPE_VIDEO,POST_TYPE_UNKNOWN,TOPIC_AROUND,TOPIC_FACE}from'../constants';import{Gallery}from'./Gallery';import{CreatePostButton}from'./CreatePostButton';import{AroundMap}from'./AroundMap';var TabPane=Tabs.TabPane;export var Home=/*#__PURE__*/function(_React$Component){_inherits(Home,_React$Component);var _super=_createSuper(Home);function Home(){var _this;_classCallCheck(this,Home);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={isLoadingGeoLocation:false,isLoadingPosts:false,error:'',posts:[],topic:TOPIC_AROUND};_this.onSuccessLoadGeoLocation=function(position){console.log(position);var _position$coords=position.coords,latitude=_position$coords.latitude,longitude=_position$coords.longitude;localStorage.setItem(POS_KEY,JSON.stringify({lat:latitude,lon:longitude}));_this.setState({isLoadingGeoLocation:false,error:''});_this.loadNearbyPosts();};_this.onFailedLoadGeoLocation=function(){_this.setState({isLoadingGeoLocation:false,error:'Failed to load geo location.'});};_this.loadNearbyPosts=function(center,radius){var _ref=center?center:JSON.parse(localStorage.getItem(POS_KEY)),lat=_ref.lat,lon=_ref.lon;var range=radius?radius:20;var token=localStorage.getItem(TOKEN_KEY);_this.setState({isLoadingPosts:true,error:''});return fetch(\"\".concat(API_ROOT,\"/search?lat=\").concat(lat,\"&lon=\").concat(lon,\"&range=\").concat(range),{method:'GET',headers:{Authorization:\"\".concat(AUTH_HEADER,\" \").concat(token)}}).then(function(response){if(response.ok){return response.json();}throw new Error('Failed to load posts.');}).then(function(data){console.log(data);_this.setState({posts:data?data:[],isLoadingPosts:false});}).catch(function(e){console.error(e);_this.setState({isLoadingPosts:false,error:e.message});});};_this.handleTopicChange=function(e){var topic=e.target.value;_this.setState({topic:topic});if(topic===TOPIC_AROUND){_this.loadNearbyPosts();}else{_this.loadFacesAroundTheWolrd();}};_this.loadFacesAroundTheWolrd=function(){var token=localStorage.getItem(TOKEN_KEY);_this.setState({isLoadingPosts:true,error:''});return fetch(\"\".concat(API_ROOT,\"/cluster?term=face\"),{method:'GET',headers:{Authorization:\"\".concat(AUTH_HEADER,\" \").concat(token)}}).then(function(response){if(response.ok){return response.json();}throw new Error('Failed to load posts');}).then(function(data){console.log(data);_this.setState({posts:data?data:[],isLoadingPosts:false});}).catch(function(e){console.error(e);_this.setState({isLoadingPosts:false,error:e.message});});};_this.loadPostsByTopic=function(center,radius){if(_this.state.topic===TOPIC_AROUND){return _this.loadNearbyPosts(center,radius);}else{return _this.loadFacesAroundTheWolrd();}};return _this;}_createClass(Home,[{key:\"componentDidMount\",value:function componentDidMount(){if(\"geolocation\"in navigator){this.setState({isLoadingGeoLocation:true,error:''});navigator.geolocation.getCurrentPosition(this.onSuccessLoadGeoLocation,this.onFailedLoadGeoLocation,GEO_OPTIONS);}else{this.setState({error:'Geolocation is not supported.'});}}},{key:\"renderImagePosts\",value:function renderImagePosts(){var posts=this.state.posts;var images=posts.filter(function(post){return post.type===POST_TYPE_IMAGE;}).map(function(post){return{user:post.user,src:post.url,thumbnail:post.url,caption:post.message,thumbnailWidth:400,thumbnailHeight:300};});return/*#__PURE__*/React.createElement(Gallery,{images:images});}},{key:\"renderVideoPosts\",value:function renderVideoPosts(){var posts=this.state.posts;return/*#__PURE__*/React.createElement(Row,{gutter:30},posts.filter(function(post){return[POST_TYPE_VIDEO,POST_TYPE_UNKNOWN].includes(post.type);}).map(function(post){return/*#__PURE__*/React.createElement(Col,{span:6,key:post.url},/*#__PURE__*/React.createElement(\"video\",{src:post.url,controls:true,className:\"video-block\"}),/*#__PURE__*/React.createElement(\"p\",null,post.user,\": \",post.message));}));}},{key:\"renderPosts\",value:function renderPosts(type){var _this$state=this.state,error=_this$state.error,isLoadingGeoLocation=_this$state.isLoadingGeoLocation,isLoadingPosts=_this$state.isLoadingPosts,posts=_this$state.posts;if(error){return error;}else if(isLoadingGeoLocation){return/*#__PURE__*/React.createElement(Spin,{tip:\"Loading geo location...\"});}else if(isLoadingPosts){return/*#__PURE__*/React.createElement(Spin,{tip:\"Loading posts...\"});}else if(posts.length>0){return type===POST_TYPE_IMAGE?this.renderImagePosts():this.renderVideoPosts();}else{return'No nearby posts';}}},{key:\"render\",value:function render(){var operations=/*#__PURE__*/React.createElement(CreatePostButton,{loadPostsByTopic:this.loadPostsByTopic});return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Radio.Group,{onChange:this.handleTopicChange,value:this.state.topic},/*#__PURE__*/React.createElement(Radio,{value:TOPIC_AROUND},\"Posts Around Me\"),/*#__PURE__*/React.createElement(Radio,{value:TOPIC_FACE},\"Faces Around The World\")),/*#__PURE__*/React.createElement(Tabs,{tabBarExtraContent:operations,className:\"main-tabs\"},/*#__PURE__*/React.createElement(TabPane,{tab:\"Image Posts\",key:\"1\"},this.renderPosts(POST_TYPE_IMAGE)),/*#__PURE__*/React.createElement(TabPane,{tab:\"Video Posts\",key:\"2\"},this.renderPosts(POST_TYPE_VIDEO)),/*#__PURE__*/React.createElement(TabPane,{tab:\"Map\",key:\"3\"},/*#__PURE__*/React.createElement(AroundMap,{googleMapURL:\"https://maps.googleapis.com/maps/api/js?key=AIzaSyD3CEh9DXuyjozqptVB5LA-dN7MxWWkr9s&v=3.exp&libraries=geometry,drawing,places\",loadingElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:\"100%\"}}),containerElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:\"600px\"}}),mapElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:\"100%\"}}),posts:this.state.posts,loadPostsByTopic:this.loadPostsByTopic}))));}}]);return Home;}(React.Component);","map":{"version":3,"sources":["/home/quinn/Projects/Around-FrontEnd-Amplify/src/components/Home.js"],"names":["React","Tabs","Spin","Row","Col","Radio","GEO_OPTIONS","POS_KEY","API_ROOT","AUTH_HEADER","TOKEN_KEY","POST_TYPE_IMAGE","POST_TYPE_VIDEO","POST_TYPE_UNKNOWN","TOPIC_AROUND","TOPIC_FACE","Gallery","CreatePostButton","AroundMap","TabPane","Home","state","isLoadingGeoLocation","isLoadingPosts","error","posts","topic","onSuccessLoadGeoLocation","position","console","log","coords","latitude","longitude","localStorage","setItem","JSON","stringify","lat","lon","setState","loadNearbyPosts","onFailedLoadGeoLocation","center","radius","parse","getItem","range","token","fetch","method","headers","Authorization","then","response","ok","json","Error","data","catch","e","message","handleTopicChange","target","value","loadFacesAroundTheWolrd","loadPostsByTopic","navigator","geolocation","getCurrentPosition","images","filter","post","type","map","user","src","url","thumbnail","caption","thumbnailWidth","thumbnailHeight","includes","length","renderImagePosts","renderVideoPosts","operations","renderPosts","height","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Tabs, Spin, Row, Col, Radio } from 'antd';\nimport {\n  GEO_OPTIONS,\n  POS_KEY,\n  API_ROOT,\n  AUTH_HEADER,\n  TOKEN_KEY,\n  POST_TYPE_IMAGE,\n  POST_TYPE_VIDEO,\n  POST_TYPE_UNKNOWN,\n  TOPIC_AROUND,\n  TOPIC_FACE,\n} from '../constants';\nimport { Gallery } from './Gallery';\nimport { CreatePostButton } from './CreatePostButton';\nimport { AroundMap } from './AroundMap';\n\nconst { TabPane } = Tabs;\n\nexport class Home extends React.Component {\n  state = {\n    isLoadingGeoLocation: false,\n    isLoadingPosts: false,\n    error: '',\n    posts: [],\n    topic: TOPIC_AROUND,\n  }\n\n  componentDidMount() {\n    if (\"geolocation\" in navigator) {\n      this.setState({ isLoadingGeoLocation: true, error: '' });\n      navigator.geolocation.getCurrentPosition(\n        this.onSuccessLoadGeoLocation,\n        this.onFailedLoadGeoLocation,\n        GEO_OPTIONS,\n      );\n    } else {\n      this.setState({ error: 'Geolocation is not supported.'});\n    }\n  }\n\n  onSuccessLoadGeoLocation = (position) => {\n    console.log(position);\n    const { latitude, longitude } = position.coords;\n    localStorage.setItem(POS_KEY, JSON.stringify({ lat: latitude, lon: longitude }));\n    this.setState({ isLoadingGeoLocation: false, error: '' });\n    this.loadNearbyPosts();\n  }\n\n  onFailedLoadGeoLocation = () => {\n    this.setState({ isLoadingGeoLocation: false, error: 'Failed to load geo location.' });\n  }\n\n  loadNearbyPosts = (center, radius) => {\n    const { lat, lon } = center ? center : JSON.parse(localStorage.getItem(POS_KEY));\n    const range = radius ? radius : 20;\n    const token = localStorage.getItem(TOKEN_KEY);\n    this.setState({ isLoadingPosts: true, error: '' });\n    return fetch(`${API_ROOT}/search?lat=${lat}&lon=${lon}&range=${range}`, {\n      method: 'GET',\n      headers: {\n        Authorization: `${AUTH_HEADER} ${token}`,\n      }\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Failed to load posts.');\n      })\n      .then((data) => {\n        console.log(data);\n        this.setState({ posts: data ? data : [], isLoadingPosts: false });\n      })\n      .catch((e) => {\n        console.error(e);\n        this.setState({ isLoadingPosts: false, error: e.message });\n      });\n  }\n\n  renderImagePosts() {\n    const { posts } = this.state;\n    const images = posts\n      .filter((post) => post.type === POST_TYPE_IMAGE)\n      .map((post) => {\n        return {\n          user: post.user,\n          src: post.url,\n          thumbnail: post.url,\n          caption: post.message,\n          thumbnailWidth: 400,\n          thumbnailHeight: 300,\n        };\n      });\n    return <Gallery images={images}/>\n  }\n\n  renderVideoPosts() {\n    const { posts } = this.state;\n    return (\n      <Row gutter={30}>\n        {\n          posts\n            .filter((post) => [POST_TYPE_VIDEO, POST_TYPE_UNKNOWN].includes(post.type))\n            .map((post) => (\n              <Col span={6} key={post.url}>\n                <video src={post.url} controls={true} className=\"video-block\"/>\n                <p>{post.user}: {post.message}</p>\n              </Col>\n            ))\n        }\n      </Row>\n    );\n  }\n\n  renderPosts(type) {\n    const { error, isLoadingGeoLocation, isLoadingPosts, posts } = this.state;\n    if (error) {\n      return error;\n    } else if (isLoadingGeoLocation) {\n      return <Spin tip=\"Loading geo location...\"/>;\n    } else if (isLoadingPosts) {\n      return <Spin tip=\"Loading posts...\"/>\n    } else if (posts.length > 0) {\n      return type === POST_TYPE_IMAGE ? this.renderImagePosts() : this.renderVideoPosts();\n    } else {\n      return 'No nearby posts';\n    }\n  }\n\n  handleTopicChange = (e) => {\n    const topic = e.target.value;\n    this.setState({ topic });\n    if (topic === TOPIC_AROUND) {\n      this.loadNearbyPosts();\n    } else {\n      this.loadFacesAroundTheWolrd();\n    }\n  }\n\n  loadFacesAroundTheWolrd = () => {\n    const token = localStorage.getItem(TOKEN_KEY);\n    this.setState({ isLoadingPosts: true, error: '' });\n    return fetch(`${API_ROOT}/cluster?term=face`, {\n      method: 'GET',\n      headers: {\n        Authorization: `${AUTH_HEADER} ${token}`,\n      }\n    })\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('Failed to load posts');\n      })\n      .then((data) => {\n        console.log(data);\n        this.setState({ posts: data ? data : [], isLoadingPosts: false });\n      })\n      .catch((e) => {\n        console.error(e);\n        this.setState({ isLoadingPosts: false , error: e.message });\n      });\n  }\n\n  loadPostsByTopic = (center, radius) => {\n    if (this.state.topic === TOPIC_AROUND) {\n      return this.loadNearbyPosts(center, radius);\n    } else {\n      return this.loadFacesAroundTheWolrd();\n    }\n  }\n\n  render() {\n    const operations = (\n      <CreatePostButton loadPostsByTopic={this.loadPostsByTopic}/>\n    );\n    return (\n      <div>\n        <Radio.Group onChange={this.handleTopicChange} value={this.state.topic}>\n          <Radio value={TOPIC_AROUND}>Posts Around Me</Radio>\n          <Radio value={TOPIC_FACE}>Faces Around The World</Radio>\n        </Radio.Group>\n        <Tabs tabBarExtraContent={operations} className=\"main-tabs\">\n          <TabPane tab=\"Image Posts\" key=\"1\">\n            {this.renderPosts(POST_TYPE_IMAGE)}\n          </TabPane>\n          <TabPane tab=\"Video Posts\" key=\"2\">\n            {this.renderPosts(POST_TYPE_VIDEO)}\n          </TabPane>\n          <TabPane tab=\"Map\" key=\"3\">\n            <AroundMap\n              googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyD3CEh9DXuyjozqptVB5LA-dN7MxWWkr9s&v=3.exp&libraries=geometry,drawing,places\"\n              loadingElement={<div style={{ height: `100%` }} />}\n              containerElement={<div style={{ height: `600px` }} />}\n              mapElement={<div style={{ height: `100%` }} />}\n              posts={this.state.posts}\n              loadPostsByTopic={this.loadPostsByTopic}\n            />\n          </TabPane>\n        </Tabs>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}