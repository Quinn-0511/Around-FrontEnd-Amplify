{"ast":null,"code":"import _classCallCheck from\"/home/quinn/Projects/Around-FrontEnd-Amplify/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/quinn/Projects/Around-FrontEnd-Amplify/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/quinn/Projects/Around-FrontEnd-Amplify/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/quinn/Projects/Around-FrontEnd-Amplify/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{Form,Icon,Input,Upload}from'antd';// import Icon from '@ant-design/icons';\nvar NormalCreatePostForm=/*#__PURE__*/function(_React$Component){_inherits(NormalCreatePostForm,_React$Component);var _super=_createSuper(NormalCreatePostForm);function NormalCreatePostForm(){var _this;_classCallCheck(this,NormalCreatePostForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.normFile=function(e){console.log('Upload event:',e);if(Array.isArray(e)){return e;}return e&&e.fileList;};_this.beforeUpload=function(){return false;};return _this;}_createClass(NormalCreatePostForm,[{key:\"render\",value:function render(){var getFieldDecorator=this.props.form.getFieldDecorator;var formItemLayout={labelCol:{span:6},wrapperCol:{span:14}};return/*#__PURE__*/React.createElement(Form,formItemLayout,/*#__PURE__*/React.createElement(Form.Item,{label:\"Message\"},getFieldDecorator('message',{rules:[{required:true,message:'Please input message.'}]})(/*#__PURE__*/React.createElement(Input,null))),/*#__PURE__*/React.createElement(Form.Item,{label:\"Image/Video\"},/*#__PURE__*/React.createElement(\"div\",{className:\"dropbox\"},getFieldDecorator('image',{valuePropName:'fileList',getValueFromEvent:this.normFile,rules:[{required:true,message:'Please select an image.'}]})(/*#__PURE__*/React.createElement(Upload.Dragger,{name:\"files\",beforeUpload:this.beforeUpload},/*#__PURE__*/React.createElement(\"p\",{className:\"ant-upload-drag-icon\"},/*#__PURE__*/React.createElement(Icon,{type:\"inbox\"})),/*#__PURE__*/React.createElement(\"p\",{className:\"ant-upload-text\"},\"Click or drag file to this area to upload\"),/*#__PURE__*/React.createElement(\"p\",{className:\"ant-upload-hint\"},\"Support for a single or bulk upload.\"))))));}}]);return NormalCreatePostForm;}(React.Component);export var CreatePostForm=Form.create()(NormalCreatePostForm);","map":{"version":3,"sources":["/home/quinn/Projects/Around-FrontEnd-Amplify/src/components/CreatePostForm.js"],"names":["React","Form","Icon","Input","Upload","NormalCreatePostForm","normFile","e","console","log","Array","isArray","fileList","beforeUpload","getFieldDecorator","props","form","formItemLayout","labelCol","span","wrapperCol","rules","required","message","valuePropName","getValueFromEvent","Component","CreatePostForm","create"],"mappings":"4eAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,IAAf,CAAqBC,KAArB,CAA4BC,MAA5B,KAAyC,MAAzC,CACA;GACMC,CAAAA,oB,+XACJC,Q,CAAW,SAAAC,CAAC,CAAI,CACdC,OAAO,CAACC,GAAR,CAAY,eAAZ,CAA6BF,CAA7B,EACA,GAAIG,KAAK,CAACC,OAAN,CAAcJ,CAAd,CAAJ,CAAsB,CACpB,MAAOA,CAAAA,CAAP,CACD,CACD,MAAOA,CAAAA,CAAC,EAAIA,CAAC,CAACK,QAAd,CACD,C,OAEDC,Y,CAAe,iBAAM,MAAN,E,uFAEN,IACCC,CAAAA,iBADD,CACuB,KAAKC,KAAL,CAAWC,IADlC,CACCF,iBADD,CAEP,GAAMG,CAAAA,cAAc,CAAG,CACrBC,QAAQ,CAAE,CAAEC,IAAI,CAAE,CAAR,CADW,CAErBC,UAAU,CAAE,CAAED,IAAI,CAAE,EAAR,CAFS,CAAvB,CAIA,mBACE,oBAAC,IAAD,CAAUF,cAAV,cACE,oBAAC,IAAD,CAAM,IAAN,EAAW,KAAK,CAAC,SAAjB,EACGH,iBAAiB,CAAC,SAAD,CAAY,CAC5BO,KAAK,CAAE,CAAC,CAAEC,QAAQ,CAAE,IAAZ,CAAkBC,OAAO,CAAE,uBAA3B,CAAD,CADqB,CAAZ,CAAjB,cAEE,oBAAC,KAAD,MAFF,CADH,CADF,cAME,oBAAC,IAAD,CAAM,IAAN,EAAW,KAAK,CAAC,aAAjB,eACE,2BAAK,SAAS,CAAC,SAAf,EACGT,iBAAiB,CAAC,OAAD,CAAU,CAC1BU,aAAa,CAAE,UADW,CAE1BC,iBAAiB,CAAE,KAAKnB,QAFE,CAG1Be,KAAK,CAAE,CAAC,CAAEC,QAAQ,CAAE,IAAZ,CAAkBC,OAAO,CAAE,yBAA3B,CAAD,CAHmB,CAAV,CAAjB,cAKC,oBAAC,MAAD,CAAQ,OAAR,EAAgB,IAAI,CAAC,OAArB,CAA6B,YAAY,CAAE,KAAKV,YAAhD,eACE,yBAAG,SAAS,CAAC,sBAAb,eACE,oBAAC,IAAD,EAAM,IAAI,CAAC,OAAX,EADF,CADF,cAIE,yBAAG,SAAS,CAAC,iBAAb,8CAJF,cAKE,yBAAG,SAAS,CAAC,iBAAb,yCALF,CALD,CADH,CADF,CANF,CADF,CA0BD,C,kCA3CgCb,KAAK,CAAC0B,S,EA8CzC,MAAO,IAAMC,CAAAA,cAAc,CAAG1B,IAAI,CAAC2B,MAAL,GAAcvB,oBAAd,CAAvB","sourcesContent":["import React from 'react';\nimport { Form, Icon, Input, Upload} from 'antd';\n// import Icon from '@ant-design/icons';\nclass NormalCreatePostForm extends React.Component {\n  normFile = e => {\n    console.log('Upload event:', e);\n    if (Array.isArray(e)) {\n      return e;\n    }\n    return e && e.fileList;\n  };\n\n  beforeUpload = () => false;\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 14 },\n    };\n    return (\n      <Form {...formItemLayout}>\n        <Form.Item label=\"Message\">\n          {getFieldDecorator('message', {\n            rules: [{ required: true, message: 'Please input message.' }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"Image/Video\">\n          <div className=\"dropbox\">\n            {getFieldDecorator('image', {\n              valuePropName: 'fileList',\n              getValueFromEvent: this.normFile,\n              rules: [{ required: true, message: 'Please select an image.' }]\n            })(\n              <Upload.Dragger name=\"files\" beforeUpload={this.beforeUpload}>\n                <p className=\"ant-upload-drag-icon\">\n                  <Icon type=\"inbox\" />\n                </p>\n                <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                <p className=\"ant-upload-hint\">Support for a single or bulk upload.</p>\n              </Upload.Dragger>,\n            )}\n          </div>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport const CreatePostForm = Form.create()(NormalCreatePostForm);\n"]},"metadata":{},"sourceType":"module"}