{"ast":null,"code":"import _classCallCheck from\"/home/quinn/Projects/Around-FrontEnd-Amplify/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/quinn/Projects/Around-FrontEnd-Amplify/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/quinn/Projects/Around-FrontEnd-Amplify/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/quinn/Projects/Around-FrontEnd-Amplify/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{Form,Input,Button,message}from'antd';import{Link}from'react-router-dom';import{API_ROOT}from'../constants';var RegistrationForm=/*#__PURE__*/function(_React$Component){_inherits(RegistrationForm,_React$Component);var _super=_createSuper(RegistrationForm);function RegistrationForm(){var _this;_classCallCheck(this,RegistrationForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={confirmDirty:false,autoCompleteResult:[]};_this.handleSubmit=function(e){e.preventDefault();_this.props.form.validateFields(function(err,values){if(!err){console.log('Received values of form: ',values);fetch(\"\".concat(API_ROOT,\"/signup\"),{method:'POST',body:JSON.stringify({username:values.username,password:values.password})}).then(function(response){if(response.ok){return response.text();}throw new Error(response.statusText);}).then(function(data){console.log(data);message.success('Registration succeed!');_this.props.history.push('/login');}).catch(function(err){console.error(err);message.error('Registration failed.');});}});};_this.handleConfirmBlur=function(e){var value=e.target.value;_this.setState({confirmDirty:_this.state.confirmDirty||!!value});};_this.compareToFirstPassword=function(rule,value,callback){var form=_this.props.form;if(value&&value!==form.getFieldValue('password')){callback('Two passwords that you enter is inconsistent!');}else{callback();}};_this.validateToNextPassword=function(rule,value,callback){var form=_this.props.form;if(value&&_this.state.confirmDirty){form.validateFields(['confirm'],{force:true});}callback();};return _this;}_createClass(RegistrationForm,[{key:\"render\",value:function render(){var getFieldDecorator=this.props.form.getFieldDecorator;var formItemLayout={labelCol:{xs:{span:24},sm:{span:8}},wrapperCol:{xs:{span:24},sm:{span:16}}};var tailFormItemLayout={wrapperCol:{xs:{span:24,offset:0},sm:{span:16,offset:8}}};return/*#__PURE__*/React.createElement(Form,Object.assign({},formItemLayout,{onSubmit:this.handleSubmit,className:\"register\"}),/*#__PURE__*/React.createElement(Form.Item,{label:\"Username\"},getFieldDecorator('username',{rules:[{required:true,message:'Please input your username!'}]})(/*#__PURE__*/React.createElement(Input,null))),/*#__PURE__*/React.createElement(Form.Item,{label:\"Password\",hasFeedback:true},getFieldDecorator('password',{rules:[{required:true,message:'Please input your password!'},{validator:this.validateToNextPassword}]})(/*#__PURE__*/React.createElement(Input.Password,null))),/*#__PURE__*/React.createElement(Form.Item,{label:\"Confirm Password\",hasFeedback:true},getFieldDecorator('confirm',{rules:[{required:true,message:'Please confirm your password!'},{validator:this.compareToFirstPassword}]})(/*#__PURE__*/React.createElement(Input.Password,{onBlur:this.handleConfirmBlur}))),/*#__PURE__*/React.createElement(Form.Item,tailFormItemLayout,/*#__PURE__*/React.createElement(Button,{type:\"primary\",htmlType:\"submit\"},\"Register\"),/*#__PURE__*/React.createElement(\"p\",null,\"I already have an account, go back to \",/*#__PURE__*/React.createElement(Link,{to:\"/login\"},\"login\"))));}}]);return RegistrationForm;}(React.Component);export var Register=Form.create({name:'register'})(RegistrationForm);","map":{"version":3,"sources":["/home/quinn/Projects/Around-FrontEnd-Amplify/src/components/Register.js"],"names":["React","Form","Input","Button","message","Link","API_ROOT","RegistrationForm","state","confirmDirty","autoCompleteResult","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","fetch","method","body","JSON","stringify","username","password","then","response","ok","text","Error","statusText","data","success","history","push","catch","error","handleConfirmBlur","value","target","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","rules","required","validator","Component","Register","create","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Input, Button, message } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { API_ROOT } from '../constants';\n\nclass RegistrationForm extends React.Component {\n  state = {\n    confirmDirty: false,\n    autoCompleteResult: [],\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values);\n        fetch(`${API_ROOT}/signup`, {\n          method: 'POST',\n          body: JSON.stringify({\n            username: values.username,\n            password: values.password,\n          }),\n        })\n          .then((response) => {\n            if (response.ok) {\n              return response.text();\n            }\n            throw new Error(response.statusText);\n          })\n          .then((data) => {\n            console.log(data);\n            message.success('Registration succeed!');\n            this.props.history.push('/login');\n          })\n          .catch((err) => {\n            console.error(err);\n            message.error('Registration failed.');\n          });\n      }\n    });\n  };\n\n  handleConfirmBlur = e => {\n    const { value } = e.target;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!');\n    } else {\n      callback();\n    }\n  };\n\n  validateToNextPassword = (rule, value, callback) => {\n    const { form } = this.props;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n\n    return (\n      <Form {...formItemLayout} onSubmit={this.handleSubmit} className=\"register\">\n        <Form.Item\n          label=\"Username\"\n        >\n          {getFieldDecorator('username', {\n            rules: [{ required: true, message: 'Please input your username!' }],\n          })(<Input />)}\n        </Form.Item>\n        <Form.Item label=\"Password\" hasFeedback>\n          {getFieldDecorator('password', {\n            rules: [\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n              {\n                validator: this.validateToNextPassword,\n              },\n            ],\n          })(<Input.Password />)}\n        </Form.Item>\n        <Form.Item label=\"Confirm Password\" hasFeedback>\n          {getFieldDecorator('confirm', {\n            rules: [\n              {\n                required: true,\n                message: 'Please confirm your password!',\n              },\n              {\n                validator: this.compareToFirstPassword,\n              },\n            ],\n          })(<Input.Password onBlur={this.handleConfirmBlur} />)}\n        </Form.Item>\n        <Form.Item {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Register\n          </Button>\n          <p>I already have an account, go back to <Link to=\"/login\">login</Link></p>\n        </Form.Item>\n      </Form>\n    );\n  }\n}\n\nexport const Register = Form.create({ name: 'register' })(RegistrationForm);\n"]},"metadata":{},"sourceType":"module"}